pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = 'docker-hub-credentials'  // Use stored Jenkins credentials
        BACKEND_IMAGE = "rhearobinson23/quiz-backend:latest"
        FRONTEND_IMAGE = "rhearobinson23/quiz-frontend:latest"
        KUBECONFIG = "$HOME/.kube/config"  // Ensure this is set up on the Jenkins agent
        GIT_REPO = 'https://github.com/rhearobinson19/Mthree_Final_Project.git'  // Change this to your repo URL
        GIT_BRANCH = 'main'  // Change this if needed
    }

    stages {
        stage('Checkout Code') {
            steps {
                script {
                    sh "rm -rf workspace && git clone -b ${GIT_BRANCH} ${GIT_REPO} workspace"
                }
            }
        }

        stage('Build and Push Backend Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: DOCKER_HUB_CREDENTIALS, usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        sh "docker login -u $DOCKER_USER -p $DOCKER_PASS"
                        sh "docker build -t ${BACKEND_IMAGE} ~/workspace/Quiz-App/Backend"
                        sh "docker push ${BACKEND_IMAGE}"
                    }
                }
            }
        }

        stage('Build and Push Frontend Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: DOCKER_HUB_CREDENTIALS, usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        sh "docker login -u $DOCKER_USER -p $DOCKER_PASS"
                        sh "docker build -t ${FRONTEND_IMAGE} ~/workspace/Quiz-App/Frontend"
                        sh "docker push ${FRONTEND_IMAGE}"
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh "kubectl apply -f ~/workspace/Quiz-App/k8s/"
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment Successful! Access your app via Ingress URL.'
        }
        failure {
            echo 'Deployment Failed! Check logs for details.'
        }
    }
}

